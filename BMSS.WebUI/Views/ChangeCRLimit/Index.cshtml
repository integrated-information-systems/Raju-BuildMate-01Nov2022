@using BMSS.WebUI.Models.ChangeCRLimitViewModels
@model ChangeCRLimitViewModel
@{
    ViewBag.Title = "Change Customer Credit Limit";
}
@section Styles {
    @Styles.Render("~/DataTablesCss")
}
@section Content_Header {
    <section class="content-header">
        <h1>
            Change Customer Credit Limit
            <small>Change Customer Credit Limit</small>
        </h1>
        <ol class="breadcrumb">
            <li><a href='@Url.Action("Index", "ChangeCRLimit")'><i class="fa fa-dashboard"></i>Administration</a></li>
            <li class="active">Change Customer Credit Limit</li>
        </ol>
    </section>
}
<div class="row">
    <div class="col-6" id="ChangeCRLimitForm">
        <div class="box box-info">
            <div class="box-header with-border">
                <h3 class="box-title">Change Customer Credit Limit</h3>
            </div>
            @using (Html.BeginForm(null, null, null, FormMethod.Post, new { @id = "ChangeCRLimitForm", @class = "form-horizontal", data_bind = "submit: validateAndSubmit" }))
            {
                @Html.ValidationSummary()
                @Html.AntiForgeryToken()
                <div class="box-body">
                    <div class="row">
                        <div class="col-12">
                            <div class="form-group">
                                @Html.LabelFor(x => x.CardCode)
                                @Html.TextBoxFor(x => x.CardCode, new { @class = "form-control", disabled = "", data_bind = "textInput: CCL.cardCode" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-12">
                            <div class="form-group">
                                @Html.LabelFor(x => x.CardName)
                                @Html.TextBoxFor(x => x.CardName, new { @class = "form-control", disabled = "", data_bind = "textInput: CCL.cardName" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-12">
                            <div class="form-group">
                                @Html.LabelFor(x => x.Balance)
                                @Html.TextBoxFor(x => x.Balance, new { @class = "form-control", disabled = "", data_bind = "textInput: CCL.balance" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-12">
                            <div class="form-group">
                                @Html.LabelFor(x => x.CreditLine)
                                @Html.TextBoxFor(x => x.CreditLine, new { @class = "form-control", disabled = "", data_bind = "textInput: CCL.creditLine" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-12">
                            <div class="form-group">
                                @Html.LabelFor(x => x.NewLimit)
                                @Html.TextBoxFor(x => x.NewLimit, new { @class = "form-control", data_bind = "textInput: CCL.newLimit" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="box-footer">
                    <button type="submit" class="btn btn-primary pull-right btn-sm">Submit To SAP</button>
                </div>
            }
        </div>
    </div>
    <div class="col-6" id="ChangeCRLimitList">
        <div class="box box-info">
            <div class="box-header with-border">
                <h3 class="box-title">Customer List</h3>
            </div>
            <div class="box-body">
                <table id="ChangeCRLimitListTbl" class="table table-striped table-bordered responsive nowrap bmdatatable" data-auto-width="false" data-paging='true' data-searching="true" data-length-change="false" data-page-length="10" data-ordering="true" style="width:100%">
                    <thead>
                        <tr>
                            <th rowspan="2">Account No</th>
                            <th rowspan="2">Company</th>
                            <th colspan="2">Actions</th>
                        </tr>
                        <tr>
                            <th>Edit</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/DataTables")
    @Scripts.Render("~/bundles/Jquery-Validation-and-Ajax")
    @Scripts.Render("~/Knockout")
    <script>
        function ChangeCRLimitViewModel(cCL) {
            var self = this;
             
         
            // Model Binding
            self.CCL = {
                cardCode: ko.observable(cCL.cardCode),
                cardName: ko.observable(cCL.cardName),
                creditLine: ko.observable(cCL.creditLine),
                balance: ko.observable(cCL.balance),
                newLimit: ko.observable(cCL.newLimit), 
            }
            // Initialize Add/Update SQ Model to the Initial State of page loaded first
            self.Initialize = function () { // Used to initialize Form
                self.CCL.cardCode(null);
                self.CCL.cardName(null);
                self.CCL.creditLine(null);
                self.CCL.balance(null);
                self.CCL.newLimit(null);
              
            }
            // SQ Form Submission using Ajax
            self.validateAndSubmit = function (form) {
                //By Default this function will return false, so form submission will not happen
                if (!$(form).valid()) {
                    window.scrollTo({ top: 0, behavior: 'smooth' });
                }
                else {

                    // Remove All li before submission, which he had in the previous validation
                    $(form).find(".validation-summary-errors ul li").remove();
                    $(form).find(".validation-summary-valid ul li").remove();

                    //self.CCL.__RequestVerificationToken = form[0].value;

                    var unmapped = ko.toJS(self.CCL);
                    unmapped.__RequestVerificationToken = form[0].value;
                    unmapped.creditLine = 0;
                    unmapped.balance = 0;
                    $.ajax({
                        url: "@Url.Action("Add", "ChangeCRLimit", null)",
                        type: 'post',
                        contentType: 'application/x-www-form-urlencoded',
                        data: ko.toJS(unmapped),
                        success: function (data)
                        {
                            
                            self.successfulSave(form, data);
                        },
                        error: function ()
                        {
                            self.errorSave(form);
                        }
                    });
                }
            }
            self.LoadCustomerList = function () {

                var CashCustomerTable = $('#ChangeCRLimitListTbl').DataTable();
                CashCustomerTable.clear().draw();
                    $.ajax({
                        url: "@Url.Action("GetCustomersList", "Customer", null)",
                        type: 'post',
                        contentType: 'application/x-www-form-urlencoded',
                        data: ko.toJS({}),
                        success: function (data) {

                            var CashCustomerLines = data;
                            if (CashCustomerLines !== null) {

                                for (var i = 0; i < CashCustomerLines.length; i++) {
                                    var rowNode =  CashCustomerTable.row.add([
                                        CashCustomerLines[i].CardCode,
                                        CashCustomerLines[i].CardName,                                        
                                        '<button type="submit" class="btn btn-info btn-xs" data-bind="click: function(customerid, data, event) { validateAndEdit(\'' + CashCustomerLines[i].CardCode + '\', data, event)}" name="EditRow" id="EditRow" ><i class="fa fa-fw fa-edit"></i></button>',                                        
                                    ]).draw().node();
                                    ko.applyBindings(self, rowNode);

                                }
                                CashCustomerTable.columns.adjust().draw();
                            }

                        },
                        error: function () { }
                    });

            }
            self.validateAndEdit = function (CustomerID) {
                $.ajax({
                        url: "@Url.Action("GetCustomerCreditDetails", "ChangeCRLimit", null)",
                        type: 'post',
                        contentType: 'application/x-www-form-urlencoded',
                    data: ko.toJS({ CardCode: CustomerID }),
                        success: function (data)
                        { 
                            self.CCL.cardCode(data.CardCode);
                            self.CCL.cardName(data.CardName);
                            self.CCL.balance(numberWithCommas(data.Balance, 2));
                            self.CCL.creditLine(numberWithCommas(data.CreditLine, 2));                            
                            self.CCL.newLimit(parseFloat(data.NewLimit).toFixed(2));
                        },
                        error: function ()
                        {
                            self.errorSave(form);
                        }
                    });
            }

            

            
            self.successfulSave = function (form, data) {
                if (Boolean(data.IsModelValid) === true) {
                    //self.Initialize();
                    //self.LoadCustomerList();
                    window.scrollTo({ top: 0, behavior: 'smooth' });
                    $('<div class="alert alert-success alert-dismissible"><button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button><h4><i class="icon fa fa-check"></i> Success!</h4> Credit Limit Change Submitted Successfully</div>')
                        .prependTo($(form))
                        .delay(5000)
                        .slideUpAndRemove('slow');

                }
                else {

                    var ErrArray = data.ModelErrList;

                    $(form).find(".validation-summary-errors ul li").remove(); // Remove All li if before Submission had client side errors
                    $(form).find(".validation-summary-valid ul li").remove();  // Remove one li with diplay:none style if before Submission didn't had any client side errors

                    for (var i = 0; i < data.ModelErrList.length; i++) {
                        $(form).find(".validation-summary-errors ul").append("<li>" + ErrArray[i] + "</li>");
                        $(form).find(".validation-summary-valid ul").append("<li>" + ErrArray[i] + "</li>");
                    }
                    window.scrollTo({ top: 0, behavior: 'smooth' });
                }

            }
            self.errorSave = function (form) {
                window.scrollTo({ top: 0, behavior: 'smooth' });
                $('<div class="alert alert-danger alert-dismissible"><button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button><h4><i class="icon fa fa-ban"></i> Alert!</h4><p>Sorry, Some thing went wrong, Please contact website adminitrator</p></div>')
                    .prependTo($(form))
                    .delay(5000)
                    .slideUpAndRemove('slow');
            }

        }
        $(function () {
            var cCLVM = new ChangeCRLimitViewModel(@Html.ViewModelToJson(Model));
            ko.applyBindings(cCLVM);
            cCLVM.LoadCustomerList();

        });
        function deleteConfirmation() {
            $('#DeleteConfirmationModal').modal('toggle');
        }
    </script>
}